/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { JobLogic, JobLogicInterface } from "../../contracts/JobLogic";

const _abi = [
  {
    inputs: [],
    name: "YHA",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "jobId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "employer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "freelancer",
        type: "address",
      },
    ],
    name: "AppliedForJob",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "jobId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "freelancer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "payment",
        type: "uint256",
      },
    ],
    name: "JobCompleted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "allFreelancerAddresses",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "allJobs",
    outputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "id",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "employer",
            type: "address",
          },
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "budget",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "completed",
            type: "bool",
          },
          {
            internalType: "address[]",
            name: "applicants",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "hiredFreelancer",
            type: "address",
          },
        ],
        internalType: "struct Storage.Job[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "jobId",
        type: "uint256",
      },
    ],
    name: "applyForJob",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "jobId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "freelancerAddress",
        type: "address",
      },
    ],
    name: "completeJob",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "employers",
    outputs: [
      {
        internalType: "address",
        name: "employerAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "industry",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "country",
        type: "string",
      },
      {
        internalType: "string",
        name: "image",
        type: "string",
      },
      {
        internalType: "bool",
        name: "registered",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "registration_date",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "escrowFunds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "freelancers",
    outputs: [
      {
        internalType: "address",
        name: "freelancerAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "skills",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "country",
        type: "string",
      },
      {
        internalType: "string",
        name: "gigTitle",
        type: "string",
      },
      {
        internalType: "string",
        name: "gitDescription",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "jobsCompleted",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "registered",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "registration_date",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "starting_price",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "jobId",
        type: "uint256",
      },
    ],
    name: "getJobByID",
    outputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "id",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "employer",
            type: "address",
          },
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "budget",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "completed",
            type: "bool",
          },
          {
            internalType: "address[]",
            name: "applicants",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "hiredFreelancer",
            type: "address",
          },
        ],
        internalType: "struct Storage.Job",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "jobId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "freelancerAddress",
        type: "address",
      },
    ],
    name: "hireFreelancer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "jobs",
    outputs: [
      {
        internalType: "uint8",
        name: "id",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "employer",
        type: "address",
      },
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "budget",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "completed",
        type: "bool",
      },
      {
        internalType: "address",
        name: "hiredFreelancer",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "roles",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalCompletedJobs",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalEmployers",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalFreelancers",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalJobs",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "walletToUser",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50612602806100206000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c80636a6b67d1116100a2578063c27a9dd411610071578063c27a9dd4146102e5578063c8d1b6aa14610315578063e0c94ae514610333578063ef8de2d81461034f578063fcafae111461037f5761010b565b80636a6b67d11461025f5780638da5cb5b1461027b5780639937464214610299578063b0f26f18146102c95761010b565b80631ace87b3116100de5780631ace87b3146101b957806321bd6693146101d7578063371ae9f4146102115780635e586eb1146102415761010b565b80630be435bd146101105780631033397b14610147578063180aedf3146101655780631906b4ce1461019b575b600080fd5b61012a60048036038101906101259190611a63565b6103af565b60405161013e989796959493929190611b63565b60405180910390f35b61014f610644565b60405161015c9190611bfd565b60405180910390f35b61017f600480360381019061017a9190611c44565b61064a565b6040516101929796959493929190611c8d565b60405180910390f35b6101a36107f6565b6040516101b09190611bfd565b60405180910390f35b6101c16107fc565b6040516101ce9190611d0a565b60405180910390f35b6101f160048036038101906101ec9190611a63565b61080f565b6040516102089b9a99989796959493929190611d25565b60405180910390f35b61022b60048036038101906102269190611c44565b610b3e565b6040516102389190611fe6565b60405180910390f35b610249610e6d565b6040516102569190611bfd565b60405180910390f35b61027960048036038101906102749190612008565b610e73565b005b6102836110c6565b6040516102909190612048565b60405180910390f35b6102b360048036038101906102ae9190611a63565b6110ea565b6040516102c09190611d0a565b60405180910390f35b6102e360048036038101906102de9190612008565b61110a565b005b6102ff60048036038101906102fa9190611c44565b61130b565b60405161030c9190612048565b60405180910390f35b61031d61134a565b60405161032a91906121e3565b60405180910390f35b61034d60048036038101906103489190611c44565b6116d0565b005b61036960048036038101906103649190611a63565b6118d5565b6040516103769190612048565b60405180910390f35b61039960048036038101906103949190612205565b611908565b6040516103a69190611bfd565b60405180910390f35b60066020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010180546103f890612274565b80601f016020809104026020016040519081016040528092919081815260200182805461042490612274565b80156104715780601f1061044657610100808354040283529160200191610471565b820191906000526020600020905b81548152906001019060200180831161045457829003601f168201915b50505050509080600201805461048690612274565b80601f01602080910402602001604051908101604052809291908181526020018280546104b290612274565b80156104ff5780601f106104d4576101008083540402835291602001916104ff565b820191906000526020600020905b8154815290600101906020018083116104e257829003601f168201915b50505050509080600301549080600401805461051a90612274565b80601f016020809104026020016040519081016040528092919081815260200182805461054690612274565b80156105935780601f1061056857610100808354040283529160200191610593565b820191906000526020600020905b81548152906001019060200180831161057657829003601f168201915b5050505050908060050180546105a890612274565b80601f01602080910402602001604051908101604052809291908181526020018280546105d490612274565b80156106215780601f106105f657610100808354040283529160200191610621565b820191906000526020600020905b81548152906001019060200180831161060457829003601f168201915b5050505050908060060160009054906101000a900460ff16908060070154905088565b60035481565b60046020528060005260406000206000915090508060000160009054906101000a900460ff16908060000160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010180546106a690612274565b80601f01602080910402602001604051908101604052809291908181526020018280546106d290612274565b801561071f5780601f106106f45761010080835404028352916020019161071f565b820191906000526020600020905b81548152906001019060200180831161070257829003601f168201915b50505050509080600201805461073490612274565b80601f016020809104026020016040519081016040528092919081815260200182805461076090612274565b80156107ad5780601f10610782576101008083540402835291602001916107ad565b820191906000526020600020905b81548152906001019060200180831161079057829003601f168201915b5050505050908060030154908060040160009054906101000a900460ff16908060060160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905087565b60025481565b600060149054906101000a900460ff1681565b60056020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600101805461085890612274565b80601f016020809104026020016040519081016040528092919081815260200182805461088490612274565b80156108d15780601f106108a6576101008083540402835291602001916108d1565b820191906000526020600020905b8154815290600101906020018083116108b457829003601f168201915b5050505050908060020180546108e690612274565b80601f016020809104026020016040519081016040528092919081815260200182805461091290612274565b801561095f5780601f106109345761010080835404028352916020019161095f565b820191906000526020600020905b81548152906001019060200180831161094257829003601f168201915b50505050509080600301549080600401805461097a90612274565b80601f01602080910402602001604051908101604052809291908181526020018280546109a690612274565b80156109f35780601f106109c8576101008083540402835291602001916109f3565b820191906000526020600020905b8154815290600101906020018083116109d657829003601f168201915b505050505090806005018054610a0890612274565b80601f0160208091040260200160405190810160405280929190818152602001828054610a3490612274565b8015610a815780601f10610a5657610100808354040283529160200191610a81565b820191906000526020600020905b815481529060010190602001808311610a6457829003601f168201915b505050505090806006018054610a9690612274565b80601f0160208091040260200160405190810160405280929190818152602001828054610ac290612274565b8015610b0f5780601f10610ae457610100808354040283529160200191610b0f565b820191906000526020600020905b815481529060010190602001808311610af257829003601f168201915b5050505050908060080154908060090160009054906101000a900460ff169080600a01549080600b015490508b565b610b4661198a565b600082118015610b685750600060149054906101000a900460ff1660ff168211155b610ba7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b9e906122f1565b60405180910390fd5b60046000838152602001908152602001600020604051806101000160405290816000820160009054906101000a900460ff1660ff1660ff1681526020016000820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182018054610c4990612274565b80601f0160208091040260200160405190810160405280929190818152602001828054610c7590612274565b8015610cc25780601f10610c9757610100808354040283529160200191610cc2565b820191906000526020600020905b815481529060010190602001808311610ca557829003601f168201915b50505050508152602001600282018054610cdb90612274565b80601f0160208091040260200160405190810160405280929190818152602001828054610d0790612274565b8015610d545780601f10610d2957610100808354040283529160200191610d54565b820191906000526020600020905b815481529060010190602001808311610d3757829003601f168201915b50505050508152602001600382015481526020016004820160009054906101000a900460ff1615151515815260200160058201805480602002602001604051908101604052809291908181526020018280548015610e0757602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610dbd575b505050505081526020016006820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050919050565b60015481565b600082118015610e955750600060149054906101000a900460ff1660ff168211155b610ed4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ecb906122f1565b60405180910390fd5b60006004600084815260200190815260200160002090506000600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff168260000160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610fab57600080fd5b610fb5828461192d565b610ff4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610feb9061235d565b60405180910390fd5b60018260040160006101000a81548160ff02191690831515021790555060036000815480929190611024906123ac565b9190505550600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600801600081548092919061107c906123ac565b91905055507f4dbba472101e9f148a3a5ecbe793f0ee16a7efe4bf3f8cbfab5330e1642ef955848484600301546040516110b8939291906123f4565b60405180910390a150505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60086020528060005260406000206000915054906101000a900460ff1681565b60008211801561112c5750600060149054906101000a900460ff1660ff168211155b61116b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611162906122f1565b60405180910390fd5b60006004600084815260200190815260200160002090506000600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff168260000160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611278576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161126f90612477565b60405180910390fd5b611282828461192d565b156112c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112b9906124e3565b60405180910390fd5b828260060160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6009818154811061131b57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606060008060149054906101000a900460ff1660ff1667ffffffffffffffff81111561137957611378612503565b5b6040519080825280602002602001820160405280156113b257816020015b61139f61198a565b8152602001906001900390816113975790505b50905060005b600060149054906101000a900460ff1660ff168110156116c857600460006001836113e39190612532565b8152602001908152602001600020604051806101000160405290816000820160009054906101000a900460ff1660ff1660ff1681526020016000820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201805461148090612274565b80601f01602080910402602001604051908101604052809291908181526020018280546114ac90612274565b80156114f95780601f106114ce576101008083540402835291602001916114f9565b820191906000526020600020905b8154815290600101906020018083116114dc57829003601f168201915b5050505050815260200160028201805461151290612274565b80601f016020809104026020016040519081016040528092919081815260200182805461153e90612274565b801561158b5780601f106115605761010080835404028352916020019161158b565b820191906000526020600020905b81548152906001019060200180831161156e57829003601f168201915b50505050508152602001600382015481526020016004820160009054906101000a900460ff161515151581526020016005820180548060200260200160405190810160405280929190818152602001828054801561163e57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116115f4575b505050505081526020016006820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250508282815181106116b0576116af612566565b5b602002602001018190525080806001019150506113b8565b508091505090565b6000811180156116f25750600060149054906101000a900460ff1660ff168111155b611731576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611728906122f1565b60405180910390fd5b600060046000838152602001908152602001600020905060005b816005018054905081101561180c573373ffffffffffffffffffffffffffffffffffffffff1682600501828154811061178757611786612566565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036117ff576040517f5e4abc8c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b808060010191505061174b565b5080600501339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f2b443803772f6da2db17c7357119f932841870fdf0a3a5d8ca9d2e112bb13326828260000160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16336040516118c993929190612595565b60405180910390a15050565b600a6020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6007602052816000526040600020602052806000526040600020600091509150505481565b60008173ffffffffffffffffffffffffffffffffffffffff168360060160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614905092915050565b604051806101000160405280600060ff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001606081526020016000815260200160001515815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611a3082611a05565b9050919050565b611a4081611a25565b8114611a4b57600080fd5b50565b600081359050611a5d81611a37565b92915050565b600060208284031215611a7957611a78611a00565b5b6000611a8784828501611a4e565b91505092915050565b611a9981611a25565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611ad9578082015181840152602081019050611abe565b60008484015250505050565b6000601f19601f8301169050919050565b6000611b0182611a9f565b611b0b8185611aaa565b9350611b1b818560208601611abb565b611b2481611ae5565b840191505092915050565b6000819050919050565b611b4281611b2f565b82525050565b60008115159050919050565b611b5d81611b48565b82525050565b600061010082019050611b79600083018b611a90565b8181036020830152611b8b818a611af6565b90508181036040830152611b9f8189611af6565b9050611bae6060830188611b39565b8181036080830152611bc08187611af6565b905081810360a0830152611bd48186611af6565b9050611be360c0830185611b54565b611bf060e0830184611b39565b9998505050505050505050565b6000602082019050611c126000830184611b39565b92915050565b611c2181611b2f565b8114611c2c57600080fd5b50565b600081359050611c3e81611c18565b92915050565b600060208284031215611c5a57611c59611a00565b5b6000611c6884828501611c2f565b91505092915050565b600060ff82169050919050565b611c8781611c71565b82525050565b600060e082019050611ca2600083018a611c7e565b611caf6020830189611a90565b8181036040830152611cc18188611af6565b90508181036060830152611cd58187611af6565b9050611ce46080830186611b39565b611cf160a0830185611b54565b611cfe60c0830184611a90565b98975050505050505050565b6000602082019050611d1f6000830184611c7e565b92915050565b600061016082019050611d3b600083018e611a90565b8181036020830152611d4d818d611af6565b90508181036040830152611d61818c611af6565b9050611d70606083018b611b39565b8181036080830152611d82818a611af6565b905081810360a0830152611d968189611af6565b905081810360c0830152611daa8188611af6565b9050611db960e0830187611b39565b611dc7610100830186611b54565b611dd5610120830185611b39565b611de3610140830184611b39565b9c9b505050505050505050505050565b611dfc81611c71565b82525050565b611e0b81611a25565b82525050565b600082825260208201905092915050565b6000611e2d82611a9f565b611e378185611e11565b9350611e47818560208601611abb565b611e5081611ae5565b840191505092915050565b611e6481611b2f565b82525050565b611e7381611b48565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000611eb18383611e02565b60208301905092915050565b6000602082019050919050565b6000611ed582611e79565b611edf8185611e84565b9350611eea83611e95565b8060005b83811015611f1b578151611f028882611ea5565b9750611f0d83611ebd565b925050600181019050611eee565b5085935050505092915050565b600061010083016000830151611f416000860182611df3565b506020830151611f546020860182611e02565b5060408301518482036040860152611f6c8282611e22565b91505060608301518482036060860152611f868282611e22565b9150506080830151611f9b6080860182611e5b565b5060a0830151611fae60a0860182611e6a565b5060c083015184820360c0860152611fc68282611eca565b91505060e0830151611fdb60e0860182611e02565b508091505092915050565b600060208201905081810360008301526120008184611f28565b905092915050565b6000806040838503121561201f5761201e611a00565b5b600061202d85828601611c2f565b925050602061203e85828601611a4e565b9150509250929050565b600060208201905061205d6000830184611a90565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000610100830160008301516120a86000860182611df3565b5060208301516120bb6020860182611e02565b50604083015184820360408601526120d38282611e22565b915050606083015184820360608601526120ed8282611e22565b91505060808301516121026080860182611e5b565b5060a083015161211560a0860182611e6a565b5060c083015184820360c086015261212d8282611eca565b91505060e083015161214260e0860182611e02565b508091505092915050565b6000612159838361208f565b905092915050565b6000602082019050919050565b600061217982612063565b612183818561206e565b9350836020820285016121958561207f565b8060005b858110156121d157848403895281516121b2858261214d565b94506121bd83612161565b925060208a01995050600181019050612199565b50829750879550505050505092915050565b600060208201905081810360008301526121fd818461216e565b905092915050565b6000806040838503121561221c5761221b611a00565b5b600061222a85828601611a4e565b925050602061223b85828601611c2f565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061228c57607f821691505b60208210810361229f5761229e612245565b5b50919050565b7f4a44450000000000000000000000000000000000000000000000000000000000600082015250565b60006122db600383611aaa565b91506122e6826122a5565b602082019050919050565b6000602082019050818103600083015261230a816122ce565b9050919050565b7f464e480000000000000000000000000000000000000000000000000000000000600082015250565b6000612347600383611aaa565b915061235282612311565b602082019050919050565b600060208201905081810360008301526123768161233a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006123b782611b2f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036123e9576123e861237d565b5b600182019050919050565b60006060820190506124096000830186611b39565b6124166020830185611a90565b6124236040830184611b39565b949350505050565b7f5752000000000000000000000000000000000000000000000000000000000000600082015250565b6000612461600283611aaa565b915061246c8261242b565b602082019050919050565b6000602082019050818103600083015261249081612454565b9050919050565b7f4641480000000000000000000000000000000000000000000000000000000000600082015250565b60006124cd600383611aaa565b91506124d882612497565b602082019050919050565b600060208201905081810360008301526124fc816124c0565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600061253d82611b2f565b915061254883611b2f565b92508282019050808211156125605761255f61237d565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006060820190506125aa6000830186611b39565b6125b76020830185611a90565b6125c46040830184611a90565b94935050505056fea2646970667358221220cf7beaba584a4e91fa6864b4982108ba5730a053909882ffdd37748ca202e6ff64736f6c63430008180033";

type JobLogicConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: JobLogicConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class JobLogic__factory extends ContractFactory {
  constructor(...args: JobLogicConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      JobLogic & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): JobLogic__factory {
    return super.connect(runner) as JobLogic__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): JobLogicInterface {
    return new Interface(_abi) as JobLogicInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): JobLogic {
    return new Contract(address, _abi, runner) as unknown as JobLogic;
  }
}
